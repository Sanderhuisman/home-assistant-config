substitutions:
  devicename: utility_bridge
  upper_devicename: Utiliti Bridge

esphome:
  name: utility-bridge
  comment: Fan controller

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  password: !secret esphome_utility_bridge_api_password

ota:
  password: !secret esphome_utility_bridge_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  manual_ip:
    static_ip: !secret wifi_ip_utility_bridge
    gateway: !secret wifi_gateway
    subnet: !secret wifi_subnet
    dns1: !secret wifi_gateway

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "utility-bridge Fallback"
    password: !secret esphome_utility_bridge_ap_password

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/Amsterdam

sensor:
  - platform: wifi_signal
    id: ${devicename}_esphome_wifi_signal
    name: ${upper_devicename} wifi signaal
    update_interval: 10s

  - platform: uptime
    id: ${devicename}_esphome_uptime
    name: ${upper_devicename} uptime

binary_sensor:
  - platform: status
    id: ${devicename}_esphome_status
    name: ${upper_devicename} status

button:
  - platform: restart
    id: ${devicename}_esphome_restart
    name: ${upper_devicename} herstart

# Load external components
external_components:
  - source:
      type: local
      path: custom_components

# SPI
spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  miso_pin: GPIO12

# nRF905 config
nrf905:
  id: "nrf905_rf"
  cs_pin: GPIO23
  am_pin: GPIO32
  cd_pin: GPIO33
  ce_pin: GPIO27
  dr_pin: GPIO35
  pwr_pin: GPIO26
  txen_pin: GPIO25

# The FAN
fan:
  - platform: zehnder
    name: "Ventilation"
    nrf905: nrf905_rf
    update_interval: "60s"
